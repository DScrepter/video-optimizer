name: Build and Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            platform: mac
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: win

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for ${{ matrix.platform }}
        run: npm run build:${{ matrix.platform }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: video-optimizer-${{ matrix.platform }}
          path: build/
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded files
        run: |
          echo "=== Downloaded artifacts ==="
          find artifacts -type f -name "*" | head -20
          echo "=== Mac artifacts ==="
          ls -la artifacts/video-optimizer-mac/build/ || echo "No mac artifacts"
          echo "=== Win artifacts ==="
          ls -la artifacts/video-optimizer-win/build/ || echo "No win artifacts"
          echo "=== Linux artifacts ==="
          ls -la artifacts/video-optimizer-linux/build/ || echo "No linux artifacts"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/video-optimizer-mac/build/*.dmg
            artifacts/video-optimizer-mac/build/*.zip
            artifacts/video-optimizer-linux/build/*.AppImage
            artifacts/video-optimizer-linux/build/*.zip
            artifacts/video-optimizer-win/build/*.exe
            artifacts/video-optimizer-win/build/*.zip
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## Что нового в версии ${{ github.ref_name }}
            
            ### Скачивания
            - **macOS**: DMG файл для установки
            - **Windows**: EXE установщик
            - **Linux**: AppImage (портативная версия)
            
            ### Системные требования
            - macOS 10.14+
            - Windows 10+
            - Linux (Ubuntu 18.04+, Fedora 28+)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
